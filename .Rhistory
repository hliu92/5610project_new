fit.int1 <- update(fit.full,.~.+occupation:marital_new)
lrtest(fit.int1,fit.full)
summary(fit.int1)  ## not significant
prob <- predict(fit.int1, newdata=testing_set, type = 'response')
table(testing_set$income, prob > 0.5)
library(InformationValue)
plotROC((testing_set$income==">50K"), prob)
#Double density plot
p <- predict(fit, type='response')
temp_train <- cbind(training_set, p)
p <- prob
temp_test <- cbind(testing_set, p)
ggplot(temp_train, aes(p, color = as.factor(income))) +
geom_density(size = 1) +
ggtitle("Training Set's estimated probabilities")
r13 <- ggplot() +
aes(x = race, color = marital_new, group =  marital_new, y = income_rec$income) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") + ggtitle('race:marital')+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(r13)
r14 <- ggplot() +
aes(x = sex, color = marital_new, group =  marital_new, y = income_rec$income) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") + ggtitle('sex:marital')+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(r14)
r15 <- ggplot() +
aes(x = region, color = marital_new, group =  marital_new, y = income_rec$income) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") + ggtitle('region:marital')+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(r15)
r16 <- ggplot() +
aes(x = region, color = sex, group =  sex, y = income_rec$income) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") + ggtitle('region:sex')+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(r16)
r17 <- ggplot() +
aes(x = region, color = race, group =  race, y = income_rec$income) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") + ggtitle('region:race')+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(r17)
r18 <- ggplot() +
aes(x = sex, color = race, group =  race, y = income_rec$income) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") + ggtitle('sex:race')+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(r18)
fit.int1 <- update(fit.full,.~.+race:marital_new)
fit.int1 <- update(fit.full,.~.+race:marital_new)
lrtest(fit.int1,fit.full)
summary(fit.int1)  ## significant, auc increase to 87.9% !!!!!!!
prob <- predict(fit.int1, newdata=testing_set, type = 'response')
table(testing_set$income, prob > 0.5)
library(InformationValue)
plotROC((testing_set$income==">50K"), prob)
fit.int1 <- update(fit.full,.~.+region:marital_new)
lrtest(fit.int1,fit.full)
prob <- predict(fit.int1, newdata=testing_set, type = 'response')
table(testing_set$income, prob > 0.5)
library(InformationValue)
plotROC((testing_set$income==">50K"), prob)
summary(fit.int1)  ## significant, not so good
fit.int1 <- update(fit.full,.~.+region:sex)
lrtest(fit.int1,fit.full)
fit.int1 <- update(fit.full,.~.+region:race)
lrtest(fit.int1,fit.full)
fit.int1 <- update(fit.full,.~.+occupation:marital_new+type_employer:marital_new)
lrtest(fit.int1,fit.full)
prob <- predict(fit.int1, newdata=testing_set, type = 'response')
table(testing_set$income, prob > 0.5)
library(InformationValue)
plotROC((testing_set$income==">50K"), prob)
fit.int1 <- update(fit.full,.~.+occupation:marital_new)
fit.int2 <- update(fit.full,.~.+occupation:marital_new+type_employer:marital_new)
lrtest(fit.int2,fit.int1)
fit.int3 <- update(fit.full,.~.+occupation:marital_new+type_employer:marital_new+region:marital_new)
lrtest(fit.int3,fit.int2)
prob <- predict(fit.int3, newdata=testing_set, type = 'response')
table(testing_set$income, prob > 0.5)
library(InformationValue)
plotROC((testing_set$income==">50K"), prob)
prob <- predict(fit.int2, newdata=testing_set, type = 'response')
table(testing_set$income, prob > 0.5)
plotROC((testing_set$income==">50K"), prob)
crossprod((income$capital_gain!=0),(income$capital_loss!=0))
setwd("~/MSBA/ISOM5610/final")
income_raw <- read.csv("adult_income.csv", sep = ",", header = TRUE)
income_raw <- income_raw[-1]
summary(income_raw)
str(income_raw) ## we notice "?" needs to be replaced by NA
income_raw[income_raw == "?"] <- NA
library(naniar)
vis_miss(income_raw)
income <- income_raw[complete.cases(income_raw),]
income[,c(2,3,5:8,12,13)] <-  lapply(income[,c(2,3,5:8,12,13)], factor) # drop empty factor levels
sum(is.na(income)) ## all NAs removed
nrow(income)/nrow(income_raw) ## 92.6% of the orginal data are complete and will be used
rm(income_raw)
# income[,c(1,4,9,10,11)] <-  lapply(income[,c(1,4,9,10,11)], as.numeric)
saveRDS(income, "income0.rds") # backup
income0 <- income # create a duplication for data exploration
summary(income)
str(income)
library(ggplot2)
library(RColorBrewer)
ds1 <- ggplot(income, aes(x=age)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Age",
y="Density of Income",
x="Age (Years)") +
scale_fill_manual(name = "income",
values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds1)
unique(income[,c(3,4)]) # check relationship between 'education' and 'education_num'. They are exactly the same, matched on a 1-to-1 basis.
#ds2 <- ggplot(income, aes(x=education_num)) +
#    geom_density(aes(fill=factor(income)),alpha=0.5) +
#    labs(title="Density of Income by Edu_num",
#       y="Density of Income",
#       x="Education (Years)") +
#    scale_fill_manual(name = "income",
#                      values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
#                      labels = c("Income <= 50K", "Income > 50K"))
#plot(ds2)
bar2 <- ggplot() + geom_bar(data=income, aes(x=education,fill=factor(income)))+
labs(title="Distribution of Income among Different Education Levels",
y="Count by Different Income", x="Education Levels")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]),labels = c("Income <= 50K", "Income > 50K"))+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(bar2)
ds3 <- ggplot(income, aes(x=capital_gain)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Capital Gain",
y="Density of Income", x="Capital Gain") +
scale_fill_manual(name = "income", values = c(brewer.pal(7, "Reds")[5],
brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds3)
ds4 <- ggplot(income, aes(x=capital_loss)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Capital Loss",
y="Density of Income",
x="Capital Loss") +
scale_fill_manual(name = "income",
values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds4)
# try net capital gain (loss)
income$capital_net <- income$capital_gain - income$capital_loss
ds4.1 <- ggplot(income, aes(x=capital_net)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Net Capital Gain (Loss)",
y="Density of Income",
x="Net Capital Gain (Loss)") +
scale_fill_manual(name = "income",
values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds4.1)
# try absolute capital gain (loss) effect
income$capital_logabseff <- log(income$capital_gain + income$capital_loss + 1)
ds4.2 <- ggplot(income, aes(x=capital_logabseff)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Log Absolute Capital Gain &  Loss Effect",
y="Density of Income",
x="Log Absolute Capital Gain & Loss Effect") +
scale_fill_manual(name = "income",
values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds4.2)
ds5 <- ggplot(income, aes(x=hr_per_week)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Working Hours",
y="Density of Income",
x="Working Hours") +
scale_fill_manual(name = "income",
values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds5)
bar1 <- ggplot() + geom_bar(data=income, aes(x=type_employer,fill=factor(income)))+
labs(title="Distribution of Income among Different Types of Employers",
y="Count by Different Income", x="Types of Employers")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]),labels = c("Income <= 50K", "Income > 50K"))+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(bar1)
bar3 <- ggplot() + geom_bar(data=income, aes(x=marital,fill=factor(income)))+
labs(title="Distribution of Income among Different Marital Statuses",
y="Count by Different Income", x="Marital Statuses")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]),labels = c("Income <= 50K", "Income > 50K"))+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(bar3)
bar4 <- ggplot() + geom_bar(data=income, aes(x=occupation,fill=factor(income)))+
labs(title="Distribution of Income among Different Types of Occupations",
y="Count by Different Income", x="Types of Occupations")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]), labels = c("Income <= 50K", "Income > 50K"))+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(bar4)
bar5 <- ggplot() + geom_bar(data=income, aes(x=race,fill=factor(income)))+
labs(title="Distribution of Income among Different Races",
y="Count by Different Income", x="Races")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]), labels = c("Income <= 50K", "Income > 50K"))+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(bar5)
bar6 <- ggplot() + geom_bar(data=income, aes(x=sex,fill=factor(income)))+
labs(title="Distribution of Income among Genders",
y="Count by Different Income", x="Gender")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]), labels = c("Income <= 50K", "Income > 50K"))
plot(bar6)
income_rec <- subset(income0,select=-education_num)
## replace capital_gain and capital_loss with log absolute capital gain (loss) effect
income_rec$capital_logabseff <- income$capital_logabseff
income_rec$capital_net <- income$capital_net
income_rec$capital_gain <- NULL
income_rec$capital_loss <- NULL
## Recategorize the country:
region_table <- data.frame(country=c("Cambodia","Canada","China","Columbia","Cuba",
"Dominican-Republic","Ecuador","El-Salvador","England","France","Germany",
"Greece","Guatemala","Haiti","Holand-Netherlands","Honduras","Hong","Hungary",
"India","Iran","Ireland","Italy","Jamaica","Japan","Laos","Mexico","Nicaragua",
"Outlying-US(Guam-USVI-etc)","Peru","Philippines","Poland","Portugal",
"Puerto-Rico","Scotland","South","Taiwan","Thailand","Trinadad&Tobago",
"United-States","Vietnam","Yugoslavia"),
region=c("Asia","NorthAmericas","Asia","SouthAmericas","NorthAmericas",
"NorthAmericas","SouthAmericas","NorthAmericas","Europe","Europe","Europe",
"Europe","NorthAmericas","NorthAmericas","Europe","NorthAmericas","Asia",
"Europe","Asia","Asia","Europe","Europe","NorthAmericas","Asia","Asia",
"NorthAmericas","NorthAmericas","NorthAmericas","SouthAmericas","Asia",
"Europe","Europe","NorthAmericas","Europe","Asia","Asia","Asia",
"SouthAmericas","NorthAmericas","Asia","Europe"))
## South is not a valid country name, delete
income_rec <- merge(income_rec, region_table, by.x="country", by.y="country", all.x=TRUE)
income_rec <- subset(income_rec,select=-country)
# summary(income_rec$region)
#
# table(income_rec$region,income_rec$income)
setwd("~/MSBA/ISOM5610/final")
income_raw <- read.csv("adult_income.csv", sep = ",", header = TRUE)
income_raw <- income_raw[-1]
summary(income_raw)
str(income_raw) ## we notice "?" needs to be replaced by NA
income_raw[income_raw == "?"] <- NA
library(naniar)
vis_miss(income_raw)
income <- income_raw[complete.cases(income_raw),]
income[,c(2,3,5:8,12,13)] <-  lapply(income[,c(2,3,5:8,12,13)], factor) # drop empty factor levels
sum(is.na(income)) ## all NAs removed
nrow(income)/nrow(income_raw) ## 92.6% of the orginal data are complete and will be used
rm(income_raw)
# income[,c(1,4,9,10,11)] <-  lapply(income[,c(1,4,9,10,11)], as.numeric)
saveRDS(income, "income0.rds") # backup
income0 <- income # create a duplication for data exploration
summary(income)
str(income)
library(ggplot2)
library(RColorBrewer)
ds1 <- ggplot(income, aes(x=age)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Age",
y="Density of Income",
x="Age (Years)") +
scale_fill_manual(name = "income",
values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds1)
unique(income[,c(3,4)]) # check relationship between 'education' and 'education_num'. They are exactly the same, matched on a 1-to-1 basis.
#ds2 <- ggplot(income, aes(x=education_num)) +
#    geom_density(aes(fill=factor(income)),alpha=0.5) +
#    labs(title="Density of Income by Edu_num",
#       y="Density of Income",
#       x="Education (Years)") +
#    scale_fill_manual(name = "income",
#                      values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
#                      labels = c("Income <= 50K", "Income > 50K"))
#plot(ds2)
bar2 <- ggplot() + geom_bar(data=income, aes(x=education,fill=factor(income)))+
labs(title="Distribution of Income among Different Education Levels",
y="Count by Different Income", x="Education Levels")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]),labels = c("Income <= 50K", "Income > 50K"))+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(bar2)
ds3 <- ggplot(income, aes(x=capital_gain)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Capital Gain",
y="Density of Income", x="Capital Gain") +
scale_fill_manual(name = "income", values = c(brewer.pal(7, "Reds")[5],
brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds3)
ds4 <- ggplot(income, aes(x=capital_loss)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Capital Loss",
y="Density of Income",
x="Capital Loss") +
scale_fill_manual(name = "income",
values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds4)
# try net capital gain (loss)
income$capital_net <- income$capital_gain - income$capital_loss
ds4.1 <- ggplot(income, aes(x=capital_net)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Net Capital Gain (Loss)",
y="Density of Income",
x="Net Capital Gain (Loss)") +
scale_fill_manual(name = "income",
values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds4.1)
# try absolute capital gain (loss) effect
income$capital_logabseff <- log(income$capital_gain + income$capital_loss + 1)
ds4.2 <- ggplot(income, aes(x=capital_logabseff)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Log Absolute Capital Gain &  Loss Effect",
y="Density of Income",
x="Log Absolute Capital Gain & Loss Effect") +
scale_fill_manual(name = "income",
values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds4.2)
ds5 <- ggplot(income, aes(x=hr_per_week)) +
geom_density(aes(fill=factor(income)),alpha=0.5) +
labs(title="Density of Income by Working Hours",
y="Density of Income",
x="Working Hours") +
scale_fill_manual(name = "income",
values = c(brewer.pal(7, "Reds")[5], brewer.pal(7, "Blues")[5]),
labels = c("Income <= 50K", "Income > 50K"))
plot(ds5)
bar1 <- ggplot() + geom_bar(data=income, aes(x=type_employer,fill=factor(income)))+
labs(title="Distribution of Income among Different Types of Employers",
y="Count by Different Income", x="Types of Employers")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]),labels = c("Income <= 50K", "Income > 50K"))+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(bar1)
bar3 <- ggplot() + geom_bar(data=income, aes(x=marital,fill=factor(income)))+
labs(title="Distribution of Income among Different Marital Statuses",
y="Count by Different Income", x="Marital Statuses")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]),labels = c("Income <= 50K", "Income > 50K"))+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(bar3)
bar4 <- ggplot() + geom_bar(data=income, aes(x=occupation,fill=factor(income)))+
labs(title="Distribution of Income among Different Types of Occupations",
y="Count by Different Income", x="Types of Occupations")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]), labels = c("Income <= 50K", "Income > 50K"))+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(bar4)
bar5 <- ggplot() + geom_bar(data=income, aes(x=race,fill=factor(income)))+
labs(title="Distribution of Income among Different Races",
y="Count by Different Income", x="Races")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]), labels = c("Income <= 50K", "Income > 50K"))+
theme(axis.text.x = element_text(angle = 20, hjust = 1,size=8))
plot(bar5)
bar6 <- ggplot() + geom_bar(data=income, aes(x=sex,fill=factor(income)))+
labs(title="Distribution of Income among Genders",
y="Count by Different Income", x="Gender")+
scale_fill_manual(name = "income",values = c(brewer.pal(7, "Reds")[4],
brewer.pal(7, "Blues")[5]), labels = c("Income <= 50K", "Income > 50K"))
plot(bar6)
# geographical plot of percentage of income > 50K
binom_income <- function(x) {x==">50K"}
income$income_large <- binom_income(income$income)
library(dplyr)
income_by_country <- tapply(income$income_large, income$country, sum)
count_by_country <- summary(income$country)
countryName <- names(count_by_country)
rindex <- c(4,6,8,9,15,17,33,35,38,39,41)
rrep <- c("Colombia", "Dominican Republic", "El Salvador", "UK",
"Netherlands", "Hong Kong",  "Puerto Rico",
"South Korea", "Trinidad", "USA", "Bosnia and Herzegovina")
countryName <- replace(countryName, rindex, rrep)
country_table <- data.frame(countryName = countryName,
countryCount = count_by_country,
countryIncome = income_by_country,
countryIncomePct = income_by_country/count_by_country*100)
library(maps)
world_map <- map_data("world")
income_map <- merge(world_map, country_table, by.x = "region", by.y = "countryName", all.x = TRUE, all.y = FALSE)
income_map <- arrange(income_map, group, order)
ggplot(income_map, aes(x = long, y = lat, group = group, fill = countryIncomePct)) +
geom_polygon(colour = "grey70") +
labs(title="Percentage of Income>50K by Country", fill = "Percentage of\nIncome > 50K\n(%)") +
scale_fill_viridis_c() +
theme_void()
income_rec <- subset(income0,select=-education_num)
## Recategorize the country:
region_table <- data.frame(country=c("Cambodia","Canada","China","Columbia","Cuba",
"Dominican-Republic","Ecuador","El-Salvador","England","France","Germany",
"Greece","Guatemala","Haiti","Holand-Netherlands","Honduras","Hong","Hungary",
"India","Iran","Ireland","Italy","Jamaica","Japan","Laos","Mexico",
"Nicaragua","Outlying-US(Guam-USVI-etc)","Peru","Philippines","Poland",
"Portugal","Puerto-Rico","Scotland","South","Taiwan","Thailand",
"Trinadad&Tobago","United-States","Vietnam","Yugoslavia"),
region=c("Asia","NorthAmericas","Asia","Latin America","Latin America",
"Latin America","Latin America","Latin America","Europe","Europe","Europe",
"Europe","Latin America","Latin America","Europe","Latin America","Asia",
"Europe","Asia","Asia","Europe","Europe","Latin America","Asia","Asia",
"Latin America","Latin America","NorthAmericas","Latin America","Asia",
"Europe","Europe","Latin America","Europe","Asia","Asia","Asia",
"Latin America","NorthAmericas","Asia","Europe"))
income_rec <- merge(income_rec, region_table, by.x="country", by.y="country", all.x=TRUE)
income_rec <- subset(income_rec,select=-country)
# summary(income_rec$region)
#
# table(income_rec$region,income_rec$income)
## without pay in type_employer !!
table(income$type_employer,income$income)
income_rec$type_employer[income_rec$type_employer=="Without-pay"] <- "Self-emp-not-inc"
## Preschool in education !!
table(income$education,income$income)
income_rec$education<-as.character(income_rec$education)
income_rec$education[income_rec$education=="Preschool"] <- "Preschool-4th"
income_rec$education[income_rec$education=="1st-4th"] <- "Preschool-4th"
income_rec$education<-as.factor(income_rec$education)
# ## Age !!
# table(income_rec$age,income_rec$income)
# wms <- weighted.mean(c(17,18,19,20,21),c(328,447,594,629,621))
# wml <- weighted.mean(c(81,82,83,84,85,86,88,90),c(13,7,5,8,3,1,3,35))
# income_rec$age[income_rec$age < 22] <-wms
# income_rec$age[income_rec$age > 80] <-wml
# ## education_num !!
# table(income_rec$education_num,income_rec$income)
# wms <- weighted.mean(c(1,2),c(45,151))
# income_rec$education_num[income_rec$education_num<3]<-wms
# ## hr_per_week !!
#
# table(income_rec$hr_per_week,income_rec$income)
## replace capital_gain and capital_loss with log absolute capital gain (loss) effect
income_rec$cap<- income_rec$capital_gain + income_rec$capital_loss
income_rec$capital_gain <- NULL
income_rec$capital_loss <- NULL
View(income_rec)
set.seed(111)
spl <- sample.split(income_rec$income, SplitRatio= 0.8)
training_set <- subset(income_rec, spl==TRUE)
testing_set <- subset(income_rec, spl==FALSE)
fit.full <- glm(income~., family=binomial, data=training_set)
summary(fit.full)
income_rec$cap <- abs(income_rec$cap)
set.seed(111)
spl <- sample.split(income_rec$income, SplitRatio= 0.8)
training_set <- subset(income_rec, spl==TRUE)
testing_set <- subset(income_rec, spl==FALSE)
fit.full <- glm(income~., family=binomial, data=training_set)
summary(fit.full)
income_rec$cap <- scale(income_rec$cap,center=T,scale=T)
set.seed(111)
spl <- sample.split(income_rec$income, SplitRatio= 0.8)
training_set <- subset(income_rec, spl==TRUE)
testing_set <- subset(income_rec, spl==FALSE)
fit.full <- glm(income~., family=binomial, data=training_set)
summary(fit.full)
income_rec <- subset(income0,select=-education_num)
## Recategorize the country:
region_table <- data.frame(country=c("Cambodia","Canada","China","Columbia","Cuba",
"Dominican-Republic","Ecuador","El-Salvador","England","France","Germany",
"Greece","Guatemala","Haiti","Holand-Netherlands","Honduras","Hong","Hungary",
"India","Iran","Ireland","Italy","Jamaica","Japan","Laos","Mexico",
"Nicaragua","Outlying-US(Guam-USVI-etc)","Peru","Philippines","Poland",
"Portugal","Puerto-Rico","Scotland","South","Taiwan","Thailand",
"Trinadad&Tobago","United-States","Vietnam","Yugoslavia"),
region=c("Asia","NorthAmericas","Asia","Latin America","Latin America",
"Latin America","Latin America","Latin America","Europe","Europe","Europe",
"Europe","Latin America","Latin America","Europe","Latin America","Asia",
"Europe","Asia","Asia","Europe","Europe","Latin America","Asia","Asia",
"Latin America","Latin America","NorthAmericas","Latin America","Asia",
"Europe","Europe","Latin America","Europe","Asia","Asia","Asia",
"Latin America","NorthAmericas","Asia","Europe"))
income_rec <- merge(income_rec, region_table, by.x="country", by.y="country", all.x=TRUE)
income_rec <- subset(income_rec,select=-country)
# summary(income_rec$region)
#
# table(income_rec$region,income_rec$income)
## without pay in type_employer !!
table(income$type_employer,income$income)
income_rec$type_employer[income_rec$type_employer=="Without-pay"] <- "Self-emp-not-inc"
## Preschool in education !!
table(income$education,income$income)
income_rec$education<-as.character(income_rec$education)
income_rec$education[income_rec$education=="Preschool"] <- "Preschool-4th"
income_rec$education[income_rec$education=="1st-4th"] <- "Preschool-4th"
income_rec$education<-as.factor(income_rec$education)
# ## Age !!
# table(income_rec$age,income_rec$income)
# wms <- weighted.mean(c(17,18,19,20,21),c(328,447,594,629,621))
# wml <- weighted.mean(c(81,82,83,84,85,86,88,90),c(13,7,5,8,3,1,3,35))
# income_rec$age[income_rec$age < 22] <-wms
# income_rec$age[income_rec$age > 80] <-wml
# ## education_num !!
# table(income_rec$education_num,income_rec$income)
# wms <- weighted.mean(c(1,2),c(45,151))
# income_rec$education_num[income_rec$education_num<3]<-wms
# ## hr_per_week !!
#
# table(income_rec$hr_per_week,income_rec$income)
## replace capital_gain and capital_loss with log absolute capital gain (loss) effect
income_rec$cap<- income_rec$capital_gain + income_rec$capital_loss
summary(income_rec$cap)
hist(income_rec$cap)
